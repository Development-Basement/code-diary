// These rules are here just for reference
// They might ACTUALLY work? (who knows)

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
    	match /users/{userId} {
    		allow write: if isUserWithId(userId) && isUserDocValid(userId)
      	allow read: if isUserWithId(userId)
    	}
  	}

  	function isUserWithId(userId) {
			return request.auth.uid != null && request.auth.uid == userId
		}

  	function isUserDocValid(userId) {
  		let afterFields = getAfter(/databases/$(database)/documents/users/$(userId)).data;
    	let hasOnlyValidFields = afterFields.keys.hasOnly(["username", "groups", "profileColor", "invites"])
    		&& afterFields.keys.hasAll(["username", "groups", "profileColor", "invites"]);
    	let areTypesCorrect = afterFields.username is string
    		&& afterFields.groups is list
      	&& afterFields.profileColor is string;
  		let isBeingDeleted = afterFields == null;

    	return isBeingDeleted || (
    		hasOnlyValidFields && areTypesCorrect
    	)
    }
  }
}
